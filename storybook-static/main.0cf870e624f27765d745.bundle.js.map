{"version":3,"file":"main.0cf870e624f27765d745.bundle.js","sources":["webpack:///./src/components/CurrencyInput.jsx"],"sourcesContent":["import React from 'react'\nimport MaskedInput from 'react-text-mask'\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\nimport numeral from 'numeral'\n\nimport EnhancedInput from './EnhancedInput'\n\nconst localeData = numeral.localeData()\n\nconst buildMask = format => {\n  let decimalLimit = 2\n  const decimalFormat = format.split('.')[1]\n  if (decimalFormat) {\n    decimalLimit = decimalFormat.length\n  }\n\n  const includeThousandsSeparator = format.includes(',')\n\n  return createNumberMask({\n    allowDecimal: true,\n    prefix: '',\n    suffix: '',\n    includeThousandsSeparator,\n    thousandsSeparatorSymbol: localeData.delimiters.thousands,\n    decimalSymbol: localeData.delimiters.decimal,\n    decimalLimit\n  })\n}\n\nconst MaskedCurrencyInput = ({ format, ...props }) => (\n  <MaskedInput mask={buildMask(format)} {...props} />\n)\n\nconst formatValue = ({ inputFormat, outputFormat, value, display }) => {\n  if (display) {\n    return numeral(parseFloat(value)).format(outputFormat)\n  }\n\n  return `${numeral(value).value()}`\n}\n\nconst CurrencyInput = ({ nativeProps, min, max, step, ...props }) => (\n  <EnhancedInput\n    formatValue={formatValue}\n    component={MaskedCurrencyInput}\n    type=\"number\"\n    updateOnChange={false}\n    nativeProps={{\n      min,\n      max,\n      step,\n      ...nativeProps\n    }}\n    {...props}\n  />\n)\n\nCurrencyInput.defaultProps = {\n  displayFormat: '0,0.00',\n  valueFormat: '0.00',\n  min: 0,\n  step: 0.01\n}\n\nexport default CurrencyInput\n"],"mappings":"AAOA","sourceRoot":""}